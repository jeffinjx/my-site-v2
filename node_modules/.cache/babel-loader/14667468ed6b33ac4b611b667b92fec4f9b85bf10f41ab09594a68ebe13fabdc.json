{"ast":null,"code":"import { __spreadArray } from 'tslib';\nimport { parse } from 'content-type';\nvar cache = new Map();\nvar cloneSvg = function cloneSvg(sourceSvg) {\n  return sourceSvg.cloneNode(true);\n};\nvar isLocal = function isLocal() {\n  return window.location.protocol === 'file:';\n};\nvar makeAjaxRequest = function makeAjaxRequest(url, httpRequestWithCredentials, callback) {\n  var httpRequest = new XMLHttpRequest();\n  httpRequest.onreadystatechange = function () {\n    try {\n      if (!/\\.svg/i.test(url) && httpRequest.readyState === 2) {\n        var contentType = httpRequest.getResponseHeader('Content-Type');\n        if (!contentType) {\n          throw new Error('Content type not found');\n        }\n        var type = parse(contentType).type;\n        if (!(type === 'image/svg+xml' || type === 'text/plain')) {\n          throw new Error(\"Invalid content type: \".concat(type));\n        }\n      }\n      if (httpRequest.readyState === 4) {\n        if (httpRequest.status === 404 || httpRequest.responseXML === null) {\n          throw new Error(isLocal() ? 'Note: SVG injection ajax calls do not work locally without ' + 'adjusting security settings in your browser. Or consider ' + 'using a local webserver.' : 'Unable to load SVG file: ' + url);\n        }\n        if (httpRequest.status === 200 || isLocal() && httpRequest.status === 0) {\n          callback(null, httpRequest);\n        } else {\n          throw new Error('There was a problem injecting the SVG: ' + httpRequest.status + ' ' + httpRequest.statusText);\n        }\n      }\n    } catch (error) {\n      httpRequest.abort();\n      if (error instanceof Error) {\n        callback(error, httpRequest);\n      } else {\n        throw error;\n      }\n    }\n  };\n  httpRequest.open('GET', url);\n  httpRequest.withCredentials = httpRequestWithCredentials;\n  if (httpRequest.overrideMimeType) {\n    httpRequest.overrideMimeType('text/xml');\n  }\n  httpRequest.send();\n};\nvar requestQueue = {};\nvar queueRequest = function queueRequest(url, callback) {\n  requestQueue[url] = requestQueue[url] || [];\n  requestQueue[url].push(callback);\n};\nvar processRequestQueue = function processRequestQueue(url) {\n  var _loop_1 = function _loop_1(i, len) {\n    setTimeout(function () {\n      if (Array.isArray(requestQueue[url])) {\n        var cacheValue = cache.get(url);\n        var callback = requestQueue[url][i];\n        if (cacheValue instanceof SVGSVGElement) {\n          callback(null, cloneSvg(cacheValue));\n        }\n        if (cacheValue instanceof Error) {\n          callback(cacheValue);\n        }\n        if (i === requestQueue[url].length - 1) {\n          delete requestQueue[url];\n        }\n      }\n    }, 0);\n  };\n  for (var i = 0, len = requestQueue[url].length; i < len; i++) {\n    _loop_1(i);\n  }\n};\nvar loadSvgCached = function loadSvgCached(url, httpRequestWithCredentials, callback) {\n  if (cache.has(url)) {\n    var cacheValue = cache.get(url);\n    if (cacheValue === undefined) {\n      queueRequest(url, callback);\n      return;\n    }\n    if (cacheValue instanceof SVGSVGElement) {\n      callback(null, cloneSvg(cacheValue));\n      return;\n    }\n  }\n  cache.set(url, undefined);\n  queueRequest(url, callback);\n  makeAjaxRequest(url, httpRequestWithCredentials, function (error, httpRequest) {\n    if (error) {\n      cache.set(url, error);\n    } else if (httpRequest.responseXML instanceof Document && httpRequest.responseXML.documentElement && httpRequest.responseXML.documentElement instanceof SVGSVGElement) {\n      cache.set(url, httpRequest.responseXML.documentElement);\n    }\n    processRequestQueue(url);\n  });\n};\nvar loadSvgUncached = function loadSvgUncached(url, httpRequestWithCredentials, callback) {\n  makeAjaxRequest(url, httpRequestWithCredentials, function (error, httpRequest) {\n    if (error) {\n      callback(error);\n    } else if (httpRequest.responseXML instanceof Document && httpRequest.responseXML.documentElement && httpRequest.responseXML.documentElement instanceof SVGSVGElement) {\n      callback(null, httpRequest.responseXML.documentElement);\n    }\n  });\n};\nvar idCounter = 0;\nvar uniqueId = function uniqueId() {\n  return ++idCounter;\n};\nvar injectedElements = [];\nvar ranScripts = {};\nvar svgNamespace = 'http://www.w3.org/2000/svg';\nvar xlinkNamespace = 'http://www.w3.org/1999/xlink';\nvar injectElement = function injectElement(el, evalScripts, renumerateIRIElements, cacheRequests, httpRequestWithCredentials, beforeEach, callback) {\n  var elUrl = el.getAttribute('data-src') || el.getAttribute('src');\n  if (!elUrl) {\n    callback(new Error('Invalid data-src or src attribute'));\n    return;\n  }\n  if (injectedElements.indexOf(el) !== -1) {\n    injectedElements.splice(injectedElements.indexOf(el), 1);\n    el = null;\n    return;\n  }\n  injectedElements.push(el);\n  el.setAttribute('src', '');\n  var loadSvg = cacheRequests ? loadSvgCached : loadSvgUncached;\n  loadSvg(elUrl, httpRequestWithCredentials, function (error, svg) {\n    if (!svg) {\n      injectedElements.splice(injectedElements.indexOf(el), 1);\n      el = null;\n      callback(error);\n      return;\n    }\n    var elId = el.getAttribute('id');\n    if (elId) {\n      svg.setAttribute('id', elId);\n    }\n    var elTitle = el.getAttribute('title');\n    if (elTitle) {\n      svg.setAttribute('title', elTitle);\n    }\n    var elWidth = el.getAttribute('width');\n    if (elWidth) {\n      svg.setAttribute('width', elWidth);\n    }\n    var elHeight = el.getAttribute('height');\n    if (elHeight) {\n      svg.setAttribute('height', elHeight);\n    }\n    var mergedClasses = Array.from(new Set(__spreadArray(__spreadArray(__spreadArray([], (svg.getAttribute('class') || '').split(' '), true), ['injected-svg'], false), (el.getAttribute('class') || '').split(' '), true))).join(' ').trim();\n    svg.setAttribute('class', mergedClasses);\n    var elStyle = el.getAttribute('style');\n    if (elStyle) {\n      svg.setAttribute('style', elStyle);\n    }\n    svg.setAttribute('data-src', elUrl);\n    var elData = [].filter.call(el.attributes, function (at) {\n      return /^data-\\w[\\w-]*$/.test(at.name);\n    });\n    Array.prototype.forEach.call(elData, function (dataAttr) {\n      if (dataAttr.name && dataAttr.value) {\n        svg.setAttribute(dataAttr.name, dataAttr.value);\n      }\n    });\n    if (renumerateIRIElements) {\n      var iriElementsAndProperties_1 = {\n        clipPath: ['clip-path'],\n        'color-profile': ['color-profile'],\n        cursor: ['cursor'],\n        filter: ['filter'],\n        linearGradient: ['fill', 'stroke'],\n        marker: ['marker', 'marker-start', 'marker-mid', 'marker-end'],\n        mask: ['mask'],\n        path: [],\n        pattern: ['fill', 'stroke'],\n        radialGradient: ['fill', 'stroke']\n      };\n      var element_1;\n      var elements_1;\n      var properties_1;\n      var currentId_1;\n      var newId_1;\n      Object.keys(iriElementsAndProperties_1).forEach(function (key) {\n        element_1 = key;\n        properties_1 = iriElementsAndProperties_1[key];\n        elements_1 = svg.querySelectorAll(element_1 + '[id]');\n        var _loop_1 = function _loop_1(a, elementsLen) {\n          currentId_1 = elements_1[a].id;\n          newId_1 = currentId_1 + '-' + uniqueId();\n          var referencingElements;\n          Array.prototype.forEach.call(properties_1, function (property) {\n            referencingElements = svg.querySelectorAll('[' + property + '*=\"' + currentId_1 + '\"]');\n            for (var b = 0, referencingElementLen = referencingElements.length; b < referencingElementLen; b++) {\n              var attrValue = referencingElements[b].getAttribute(property);\n              if (attrValue && !attrValue.match(new RegExp('url\\\\(\"?#' + currentId_1 + '\"?\\\\)'))) {\n                continue;\n              }\n              referencingElements[b].setAttribute(property, 'url(#' + newId_1 + ')');\n            }\n          });\n          var allLinks = svg.querySelectorAll('[*|href]');\n          var links = [];\n          for (var c = 0, allLinksLen = allLinks.length; c < allLinksLen; c++) {\n            var href = allLinks[c].getAttributeNS(xlinkNamespace, 'href');\n            if (href && href.toString() === '#' + elements_1[a].id) {\n              links.push(allLinks[c]);\n            }\n          }\n          for (var d = 0, linksLen = links.length; d < linksLen; d++) {\n            links[d].setAttributeNS(xlinkNamespace, 'href', '#' + newId_1);\n          }\n          elements_1[a].id = newId_1;\n        };\n        for (var a = 0, elementsLen = elements_1.length; a < elementsLen; a++) {\n          _loop_1(a);\n        }\n      });\n    }\n    svg.removeAttribute('xmlns:a');\n    var scripts = svg.querySelectorAll('script');\n    var scriptsToEval = [];\n    var script;\n    var scriptType;\n    for (var i = 0, scriptsLen = scripts.length; i < scriptsLen; i++) {\n      scriptType = scripts[i].getAttribute('type');\n      if (!scriptType || scriptType === 'application/ecmascript' || scriptType === 'application/javascript' || scriptType === 'text/javascript') {\n        script = scripts[i].innerText || scripts[i].textContent;\n        if (script) {\n          scriptsToEval.push(script);\n        }\n        svg.removeChild(scripts[i]);\n      }\n    }\n    if (scriptsToEval.length > 0 && (evalScripts === 'always' || evalScripts === 'once' && !ranScripts[elUrl])) {\n      for (var l = 0, scriptsToEvalLen = scriptsToEval.length; l < scriptsToEvalLen; l++) {\n        new Function(scriptsToEval[l])(window);\n      }\n      ranScripts[elUrl] = true;\n    }\n    var styleTags = svg.querySelectorAll('style');\n    Array.prototype.forEach.call(styleTags, function (styleTag) {\n      styleTag.textContent += '';\n    });\n    svg.setAttribute('xmlns', svgNamespace);\n    svg.setAttribute('xmlns:xlink', xlinkNamespace);\n    beforeEach(svg);\n    if (!el.parentNode) {\n      injectedElements.splice(injectedElements.indexOf(el), 1);\n      el = null;\n      callback(new Error('Parent node is null'));\n      return;\n    }\n    el.parentNode.replaceChild(svg, el);\n    injectedElements.splice(injectedElements.indexOf(el), 1);\n    el = null;\n    callback(null, svg);\n  });\n};\nvar SVGInjector = function SVGInjector(elements, _a) {\n  var _b = _a === void 0 ? {} : _a,\n    _c = _b.afterAll,\n    afterAll = _c === void 0 ? function () {\n      return undefined;\n    } : _c,\n    _d = _b.afterEach,\n    afterEach = _d === void 0 ? function () {\n      return undefined;\n    } : _d,\n    _e = _b.beforeEach,\n    beforeEach = _e === void 0 ? function () {\n      return undefined;\n    } : _e,\n    _f = _b.cacheRequests,\n    cacheRequests = _f === void 0 ? true : _f,\n    _g = _b.evalScripts,\n    evalScripts = _g === void 0 ? 'never' : _g,\n    _h = _b.httpRequestWithCredentials,\n    httpRequestWithCredentials = _h === void 0 ? false : _h,\n    _j = _b.renumerateIRIElements,\n    renumerateIRIElements = _j === void 0 ? true : _j;\n  if (elements && 'length' in elements) {\n    var elementsLoaded_1 = 0;\n    for (var i = 0, j = elements.length; i < j; i++) {\n      injectElement(elements[i], evalScripts, renumerateIRIElements, cacheRequests, httpRequestWithCredentials, beforeEach, function (error, svg) {\n        afterEach(error, svg);\n        if (elements && 'length' in elements && elements.length === ++elementsLoaded_1) {\n          afterAll(elementsLoaded_1);\n        }\n      });\n    }\n  } else if (elements) {\n    injectElement(elements, evalScripts, renumerateIRIElements, cacheRequests, httpRequestWithCredentials, beforeEach, function (error, svg) {\n      afterEach(error, svg);\n      afterAll(1);\n      elements = null;\n    });\n  } else {\n    afterAll(0);\n  }\n};\nexport { SVGInjector };","map":{"version":3,"mappings":"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","names":["cache","Map","cloneSvg","sourceSvg","cloneNode","isLocal","location","protocol","makeAjaxRequest","url","httpRequestWithCredentials","callback","httpRequest","XMLHttpRequest","onreadystatechange","test","readyState","contentType","getResponseHeader","Error","parseContentType","type","status","responseXML","statusText","error","abort","open","withCredentials","overrideMimeType","send","requestQueue","queueRequest","push","processRequestQueue","i","len","setTimeout","Array","isArray","cacheValue","get","SVGSVGElement","length","loadSvgCached","has","undefined","set","Document","documentElement","loadSvgUncached","idCounter","uniqueId","injectedElements","ranScripts","svgNamespace","xlinkNamespace","injectElement","el","evalScripts","renumerateIRIElements","cacheRequests","beforeEach","elUrl","getAttribute","indexOf","splice","setAttribute","loadSvg","svg","elId","elTitle","elWidth","elHeight","mergedClasses","from","Set","split","join","trim","elStyle","elData","filter","call","attributes","at","name","prototype","forEach","dataAttr","value","iriElementsAndProperties_1","clipPath","cursor","linearGradient","marker","mask","path","pattern","radialGradient","element_1","elements_1","properties_1","currentId_1","newId_1","Object","keys","key","querySelectorAll","a","elementsLen","id","referencingElements","property","b","referencingElementLen","attrValue","match","RegExp","allLinks","links","c","allLinksLen","href","getAttributeNS","toString","d","linksLen","setAttributeNS","removeAttribute","scripts","scriptsToEval","script","scriptType","scriptsLen","innerText","textContent","removeChild","l","scriptsToEvalLen","Function","window","styleTags","styleTag","parentNode","replaceChild","SVGInjector","elements","_a","_b","_c","afterAll","_d","afterEach","_e","_f","_g","_h","_j","elementsLoaded_1","j"],"sources":["C:\\Users\\esfiene\\Documents\\WEBDEV-BOOTCAMP\\redostart\\node_modules\\@tanem\\svg-injector\\compiled\\cache.js","C:\\Users\\esfiene\\Documents\\WEBDEV-BOOTCAMP\\redostart\\node_modules\\@tanem\\svg-injector\\compiled\\clone-svg.js","C:\\Users\\esfiene\\Documents\\WEBDEV-BOOTCAMP\\redostart\\node_modules\\@tanem\\svg-injector\\compiled\\is-local.js","C:\\Users\\esfiene\\Documents\\WEBDEV-BOOTCAMP\\redostart\\node_modules\\@tanem\\svg-injector\\compiled\\make-ajax-request.js","C:\\Users\\esfiene\\Documents\\WEBDEV-BOOTCAMP\\redostart\\node_modules\\@tanem\\svg-injector\\compiled\\request-queue.js","C:\\Users\\esfiene\\Documents\\WEBDEV-BOOTCAMP\\redostart\\node_modules\\@tanem\\svg-injector\\compiled\\load-svg-cached.js","C:\\Users\\esfiene\\Documents\\WEBDEV-BOOTCAMP\\redostart\\node_modules\\@tanem\\svg-injector\\compiled\\load-svg-uncached.js","C:\\Users\\esfiene\\Documents\\WEBDEV-BOOTCAMP\\redostart\\node_modules\\@tanem\\svg-injector\\compiled\\unique-id.js","C:\\Users\\esfiene\\Documents\\WEBDEV-BOOTCAMP\\redostart\\node_modules\\@tanem\\svg-injector\\compiled\\inject-element.js","C:\\Users\\esfiene\\Documents\\WEBDEV-BOOTCAMP\\redostart\\node_modules\\@tanem\\svg-injector\\compiled\\svg-injector.js"],"sourcesContent":["var cache = new Map();\nexport default cache;\n//# sourceMappingURL=cache.js.map","var cloneSvg = function (sourceSvg) {\n    return sourceSvg.cloneNode(true);\n};\nexport default cloneSvg;\n//# sourceMappingURL=clone-svg.js.map","var isLocal = function () { return window.location.protocol === 'file:'; };\nexport default isLocal;\n//# sourceMappingURL=is-local.js.map","import { parse as parseContentType } from 'content-type';\nimport isLocal from './is-local';\nvar makeAjaxRequest = function (url, httpRequestWithCredentials, callback) {\n    var httpRequest = new XMLHttpRequest();\n    httpRequest.onreadystatechange = function () {\n        try {\n            if (!/\\.svg/i.test(url) && httpRequest.readyState === 2) {\n                var contentType = httpRequest.getResponseHeader('Content-Type');\n                if (!contentType) {\n                    throw new Error('Content type not found');\n                }\n                var type = parseContentType(contentType).type;\n                if (!(type === 'image/svg+xml' || type === 'text/plain')) {\n                    throw new Error(\"Invalid content type: \".concat(type));\n                }\n            }\n            if (httpRequest.readyState === 4) {\n                if (httpRequest.status === 404 || httpRequest.responseXML === null) {\n                    throw new Error(isLocal()\n                        ? 'Note: SVG injection ajax calls do not work locally without ' +\n                            'adjusting security settings in your browser. Or consider ' +\n                            'using a local webserver.'\n                        : 'Unable to load SVG file: ' + url);\n                }\n                if (httpRequest.status === 200 ||\n                    (isLocal() && httpRequest.status === 0)) {\n                    callback(null, httpRequest);\n                }\n                else {\n                    throw new Error('There was a problem injecting the SVG: ' +\n                        httpRequest.status +\n                        ' ' +\n                        httpRequest.statusText);\n                }\n            }\n        }\n        catch (error) {\n            httpRequest.abort();\n            if (error instanceof Error) {\n                callback(error, httpRequest);\n            }\n            else {\n                throw error;\n            }\n        }\n    };\n    httpRequest.open('GET', url);\n    httpRequest.withCredentials = httpRequestWithCredentials;\n    if (httpRequest.overrideMimeType) {\n        httpRequest.overrideMimeType('text/xml');\n    }\n    httpRequest.send();\n};\nexport default makeAjaxRequest;\n//# sourceMappingURL=make-ajax-request.js.map","import cache from './cache';\nimport cloneSvg from './clone-svg';\nvar requestQueue = {};\nexport var clear = function () {\n    requestQueue = {};\n};\nexport var queueRequest = function (url, callback) {\n    requestQueue[url] = requestQueue[url] || [];\n    requestQueue[url].push(callback);\n};\nexport var processRequestQueue = function (url) {\n    var _loop_1 = function (i, len) {\n        setTimeout(function () {\n            if (Array.isArray(requestQueue[url])) {\n                var cacheValue = cache.get(url);\n                var callback = requestQueue[url][i];\n                if (cacheValue instanceof SVGSVGElement) {\n                    callback(null, cloneSvg(cacheValue));\n                }\n                if (cacheValue instanceof Error) {\n                    callback(cacheValue);\n                }\n                if (i === requestQueue[url].length - 1) {\n                    delete requestQueue[url];\n                }\n            }\n        }, 0);\n    };\n    for (var i = 0, len = requestQueue[url].length; i < len; i++) {\n        _loop_1(i, len);\n    }\n};\n//# sourceMappingURL=request-queue.js.map","import cache from './cache';\nimport cloneSvg from './clone-svg';\nimport makeAjaxRequest from './make-ajax-request';\nimport { processRequestQueue, queueRequest } from './request-queue';\nvar loadSvgCached = function (url, httpRequestWithCredentials, callback) {\n    if (cache.has(url)) {\n        var cacheValue = cache.get(url);\n        if (cacheValue === undefined) {\n            queueRequest(url, callback);\n            return;\n        }\n        if (cacheValue instanceof SVGSVGElement) {\n            callback(null, cloneSvg(cacheValue));\n            return;\n        }\n    }\n    cache.set(url, undefined);\n    queueRequest(url, callback);\n    makeAjaxRequest(url, httpRequestWithCredentials, function (error, httpRequest) {\n        if (error) {\n            cache.set(url, error);\n        }\n        else if (httpRequest.responseXML instanceof Document &&\n            httpRequest.responseXML.documentElement &&\n            httpRequest.responseXML.documentElement instanceof SVGSVGElement) {\n            cache.set(url, httpRequest.responseXML.documentElement);\n        }\n        processRequestQueue(url);\n    });\n};\nexport default loadSvgCached;\n//# sourceMappingURL=load-svg-cached.js.map","import makeAjaxRequest from './make-ajax-request';\nvar loadSvgUncached = function (url, httpRequestWithCredentials, callback) {\n    makeAjaxRequest(url, httpRequestWithCredentials, function (error, httpRequest) {\n        if (error) {\n            callback(error);\n        }\n        else if (httpRequest.responseXML instanceof Document &&\n            httpRequest.responseXML.documentElement &&\n            httpRequest.responseXML.documentElement instanceof SVGSVGElement) {\n            callback(null, httpRequest.responseXML.documentElement);\n        }\n    });\n};\nexport default loadSvgUncached;\n//# sourceMappingURL=load-svg-uncached.js.map","var idCounter = 0;\nvar uniqueId = function () { return ++idCounter; };\nexport default uniqueId;\n//# sourceMappingURL=unique-id.js.map","import { __spreadArray } from \"tslib\";\nimport loadSvgCached from './load-svg-cached';\nimport loadSvgUncached from './load-svg-uncached';\nimport uniqueId from './unique-id';\nvar injectedElements = [];\nvar ranScripts = {};\nvar svgNamespace = 'http://www.w3.org/2000/svg';\nvar xlinkNamespace = 'http://www.w3.org/1999/xlink';\nvar injectElement = function (el, evalScripts, renumerateIRIElements, cacheRequests, httpRequestWithCredentials, beforeEach, callback) {\n    var elUrl = el.getAttribute('data-src') || el.getAttribute('src');\n    if (!elUrl) {\n        callback(new Error('Invalid data-src or src attribute'));\n        return;\n    }\n    if (injectedElements.indexOf(el) !== -1) {\n        injectedElements.splice(injectedElements.indexOf(el), 1);\n        el = null;\n        return;\n    }\n    injectedElements.push(el);\n    el.setAttribute('src', '');\n    var loadSvg = cacheRequests ? loadSvgCached : loadSvgUncached;\n    loadSvg(elUrl, httpRequestWithCredentials, function (error, svg) {\n        if (!svg) {\n            injectedElements.splice(injectedElements.indexOf(el), 1);\n            el = null;\n            callback(error);\n            return;\n        }\n        var elId = el.getAttribute('id');\n        if (elId) {\n            svg.setAttribute('id', elId);\n        }\n        var elTitle = el.getAttribute('title');\n        if (elTitle) {\n            svg.setAttribute('title', elTitle);\n        }\n        var elWidth = el.getAttribute('width');\n        if (elWidth) {\n            svg.setAttribute('width', elWidth);\n        }\n        var elHeight = el.getAttribute('height');\n        if (elHeight) {\n            svg.setAttribute('height', elHeight);\n        }\n        var mergedClasses = Array.from(new Set(__spreadArray(__spreadArray(__spreadArray([], (svg.getAttribute('class') || '').split(' '), true), [\n            'injected-svg'\n        ], false), (el.getAttribute('class') || '').split(' '), true)))\n            .join(' ')\n            .trim();\n        svg.setAttribute('class', mergedClasses);\n        var elStyle = el.getAttribute('style');\n        if (elStyle) {\n            svg.setAttribute('style', elStyle);\n        }\n        svg.setAttribute('data-src', elUrl);\n        var elData = [].filter.call(el.attributes, function (at) {\n            return /^data-\\w[\\w-]*$/.test(at.name);\n        });\n        Array.prototype.forEach.call(elData, function (dataAttr) {\n            if (dataAttr.name && dataAttr.value) {\n                svg.setAttribute(dataAttr.name, dataAttr.value);\n            }\n        });\n        if (renumerateIRIElements) {\n            var iriElementsAndProperties_1 = {\n                clipPath: ['clip-path'],\n                'color-profile': ['color-profile'],\n                cursor: ['cursor'],\n                filter: ['filter'],\n                linearGradient: ['fill', 'stroke'],\n                marker: ['marker', 'marker-start', 'marker-mid', 'marker-end'],\n                mask: ['mask'],\n                path: [],\n                pattern: ['fill', 'stroke'],\n                radialGradient: ['fill', 'stroke'],\n            };\n            var element_1;\n            var elements_1;\n            var properties_1;\n            var currentId_1;\n            var newId_1;\n            Object.keys(iriElementsAndProperties_1).forEach(function (key) {\n                element_1 = key;\n                properties_1 = iriElementsAndProperties_1[key];\n                elements_1 = svg.querySelectorAll(element_1 + '[id]');\n                var _loop_1 = function (a, elementsLen) {\n                    currentId_1 = elements_1[a].id;\n                    newId_1 = currentId_1 + '-' + uniqueId();\n                    var referencingElements;\n                    Array.prototype.forEach.call(properties_1, function (property) {\n                        referencingElements = svg.querySelectorAll('[' + property + '*=\"' + currentId_1 + '\"]');\n                        for (var b = 0, referencingElementLen = referencingElements.length; b < referencingElementLen; b++) {\n                            var attrValue = referencingElements[b].getAttribute(property);\n                            if (attrValue &&\n                                !attrValue.match(new RegExp('url\\\\(\"?#' + currentId_1 + '\"?\\\\)'))) {\n                                continue;\n                            }\n                            referencingElements[b].setAttribute(property, 'url(#' + newId_1 + ')');\n                        }\n                    });\n                    var allLinks = svg.querySelectorAll('[*|href]');\n                    var links = [];\n                    for (var c = 0, allLinksLen = allLinks.length; c < allLinksLen; c++) {\n                        var href = allLinks[c].getAttributeNS(xlinkNamespace, 'href');\n                        if (href && href.toString() === '#' + elements_1[a].id) {\n                            links.push(allLinks[c]);\n                        }\n                    }\n                    for (var d = 0, linksLen = links.length; d < linksLen; d++) {\n                        links[d].setAttributeNS(xlinkNamespace, 'href', '#' + newId_1);\n                    }\n                    elements_1[a].id = newId_1;\n                };\n                for (var a = 0, elementsLen = elements_1.length; a < elementsLen; a++) {\n                    _loop_1(a, elementsLen);\n                }\n            });\n        }\n        svg.removeAttribute('xmlns:a');\n        var scripts = svg.querySelectorAll('script');\n        var scriptsToEval = [];\n        var script;\n        var scriptType;\n        for (var i = 0, scriptsLen = scripts.length; i < scriptsLen; i++) {\n            scriptType = scripts[i].getAttribute('type');\n            if (!scriptType ||\n                scriptType === 'application/ecmascript' ||\n                scriptType === 'application/javascript' ||\n                scriptType === 'text/javascript') {\n                script = scripts[i].innerText || scripts[i].textContent;\n                if (script) {\n                    scriptsToEval.push(script);\n                }\n                svg.removeChild(scripts[i]);\n            }\n        }\n        if (scriptsToEval.length > 0 &&\n            (evalScripts === 'always' ||\n                (evalScripts === 'once' && !ranScripts[elUrl]))) {\n            for (var l = 0, scriptsToEvalLen = scriptsToEval.length; l < scriptsToEvalLen; l++) {\n                new Function(scriptsToEval[l])(window);\n            }\n            ranScripts[elUrl] = true;\n        }\n        var styleTags = svg.querySelectorAll('style');\n        Array.prototype.forEach.call(styleTags, function (styleTag) {\n            styleTag.textContent += '';\n        });\n        svg.setAttribute('xmlns', svgNamespace);\n        svg.setAttribute('xmlns:xlink', xlinkNamespace);\n        beforeEach(svg);\n        if (!el.parentNode) {\n            injectedElements.splice(injectedElements.indexOf(el), 1);\n            el = null;\n            callback(new Error('Parent node is null'));\n            return;\n        }\n        el.parentNode.replaceChild(svg, el);\n        injectedElements.splice(injectedElements.indexOf(el), 1);\n        el = null;\n        callback(null, svg);\n    });\n};\nexport default injectElement;\n//# sourceMappingURL=inject-element.js.map","import injectElement from './inject-element';\nvar SVGInjector = function (elements, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.afterAll, afterAll = _c === void 0 ? function () { return undefined; } : _c, _d = _b.afterEach, afterEach = _d === void 0 ? function () { return undefined; } : _d, _e = _b.beforeEach, beforeEach = _e === void 0 ? function () { return undefined; } : _e, _f = _b.cacheRequests, cacheRequests = _f === void 0 ? true : _f, _g = _b.evalScripts, evalScripts = _g === void 0 ? 'never' : _g, _h = _b.httpRequestWithCredentials, httpRequestWithCredentials = _h === void 0 ? false : _h, _j = _b.renumerateIRIElements, renumerateIRIElements = _j === void 0 ? true : _j;\n    if (elements && 'length' in elements) {\n        var elementsLoaded_1 = 0;\n        for (var i = 0, j = elements.length; i < j; i++) {\n            injectElement(elements[i], evalScripts, renumerateIRIElements, cacheRequests, httpRequestWithCredentials, beforeEach, function (error, svg) {\n                afterEach(error, svg);\n                if (elements &&\n                    'length' in elements &&\n                    elements.length === ++elementsLoaded_1) {\n                    afterAll(elementsLoaded_1);\n                }\n            });\n        }\n    }\n    else if (elements) {\n        injectElement(elements, evalScripts, renumerateIRIElements, cacheRequests, httpRequestWithCredentials, beforeEach, function (error, svg) {\n            afterEach(error, svg);\n            afterAll(1);\n            elements = null;\n        });\n    }\n    else {\n        afterAll(0);\n    }\n};\nexport default SVGInjector;\n//# sourceMappingURL=svg-injector.js.map"]},"metadata":{},"sourceType":"module","externalDependencies":[]}